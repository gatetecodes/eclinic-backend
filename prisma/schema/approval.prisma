model Approval {
    id            Int            @id @default(autoincrement())
    clinic        Clinic         @relation(fields: [clinicId], references: [id])
    clinicId      Int
    branch        Branch?        @relation(fields: [branchId], references: [id])
    branchId      Int?
    type          ApprovalType
    status        ApprovalStatus @default(PENDING)
    requestedBy   User           @relation("ApprovalRequester", fields: [requestedById], references: [id])
    requestedById Int
    approvedBy    User?          @relation("ApprovalApprover", fields: [approvedById], references: [id])
    approvedById  Int?
    reason        String?
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt
    discount      Discount?      @relation(fields: [discountId], references: [id], onDelete: Cascade)
    discountId    Int?           @unique
    // TODO! Add other relations as needed, e.g.:
    // refund         Refund?       @relation(fields: [refundId], references: [id])
    // refundId       Int?
}

enum ApprovalType {
    DISCOUNT
    REFUND
    PRICE_OVERRIDE
}

enum ApprovalStatus {
    PENDING
    APPROVED
    REJECTED
}
